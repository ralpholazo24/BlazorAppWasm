@page "/"
@using BlazorAppWasm.Models;


<div class="container">

    <h3>Categories</h3>

    <div class="row">
        <div class="col-md-12 d-flex flex-row overflow-auto">
            @foreach(var category in categories)
            {
                var taskCount = todoItems.Where(e => e.CategoryId == category.Id).Count();

                <div class="category-container" @onclick="@(() => ShowAddTodoModal(category))">
                    <div class="p-2 bg-opacity-50 m-2 category-item">
                        <div class="category-name">
                            <label>@category.Name</label>
                        </div>
                        <div class="category-task-count">
                            <label>@taskCount Task(s)</label>
                        </div>                        
                    </div>                                       
                </div>
            }    
            
              <div class="category-container" @onclick="ShowAddCategoryModal">
                    <div class="p-2 bg-opacity-50 m-2 category-item">
                        <div class="category-name">
                            <label>Add Category</label>
                        </div>                      
                    </div>                                       
                </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 mt-3">            
            <h4>Task(s)</h4>
            <hr />
        </div>      
    </div>
                                                
    @foreach(var todo in todoItems)
    {
        <div class="row">
            <div class="col-md-12 p-1 m-2">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                    <label class="form-check-label" for="flexCheckDefault">
                    @todo.Task
                    </label>
                </div>                              
            </div>
        </div>
    }                           
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    private List<Category> categories = new List<Category>();
    private List<TodoItem> todoItems = new List<TodoItem>();

    public Todo()
    {
        FakeData fakeData = new FakeData();
        categories = fakeData.GetCategory();
        todoItems = fakeData.GetTodoItems(categories);
    }

    async Task ShowAddTodoModal(Category category)
    {
        var formModal = Modal.Show<AddTodoDialog>($"Add {category.Name}");
        var result = await formModal.Result;

        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else
        {
            var res = (TodoItem)result.Data;
            var todo = new TodoItem()
            {
                CategoryId = category.Id,
                Task = res.Task,
            };

            todoItems.Add(todo);            
        }
    }


    async Task ShowAddCategoryModal()
    {
        var formModal = Modal.Show<AddCategoryDialog>("Add Category");
        var result = await formModal.Result;

        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else
        {
            var res = (Category)result.Data;
            var category = new Category()
            {
                Id = res.Id,
                Name = res.Name
            };

            categories.Add(category);            
        }
    }

}
